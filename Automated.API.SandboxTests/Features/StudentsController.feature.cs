// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Automated.API.SandboxTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class StudentsControllerFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = new string[] {
                "StudentsController"};
        
#line 1 "StudentsController.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "StudentsController", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "StudentsController")))
            {
                global::Automated.API.SandboxTests.Features.StudentsControllerFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode(string index, string employeeObject, string expectedStatusCode, string expectedResponseMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Index", index);
            argumentsOfScenario.Add("Employee Object", employeeObject);
            argumentsOfScenario.Add("Expected Status Code", expectedStatusCode);
            argumentsOfScenario.Add("Expected Response Message", expectedResponseMessage);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("0100 I try to GET student list. When I try to get list, it should return related " +
                    "status code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.Given(string.Format("{0} model", employeeObject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
  testRunner.When("I call the get all students action", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
  testRunner.Then(string.Format("it should return {0}", expectedStatusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 8
     testRunner.And(string.Format("raw response message should contain {0}", expectedResponseMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0100 I try to GET student list. When I try to get list, it should return related " +
            "status code: 01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "401")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Invalid ApiKey\'")]
        public void _0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode_01()
        {
#line 4
this._0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode("01", "\'\'", "401", "\'Invalid ApiKey\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0100 I try to GET student list. When I try to get list, it should return related " +
            "status code: 02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": false}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "401")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Invalid ApiKey\'")]
        public void _0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode_02()
        {
#line 4
this._0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode("02", "\'{\"sendApiKey\": false}\'", "401", "\'Invalid ApiKey\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0100 I try to GET student list. When I try to get list, it should return related " +
            "status code: 03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'[{\"id\":\'")]
        public void _0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode_03()
        {
#line 4
this._0100ITryToGETStudentList_WhenITryToGetListItShouldReturnRelatedStatusCode("03", "\'{\"sendApiKey\": true}\'", "200", "\'[{\"id\":\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void _0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode(string index, string employeeObject, string expectedStatusCode, string expectedResponseMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Index", index);
            argumentsOfScenario.Add("Employee Object", employeeObject);
            argumentsOfScenario.Add("Expected Status Code", expectedStatusCode);
            argumentsOfScenario.Add("Expected Response Message", expectedResponseMessage);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("0200 I try to GET one student by Id. When I try to get by Id, it should return re" +
                    "lated status code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 16
 testRunner.Given(string.Format("{0} model", employeeObject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 17
  testRunner.When("I call the get by Id student action", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
  testRunner.Then(string.Format("it should return {0}", expectedStatusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
     testRunner.And(string.Format("raw response message should contain {0}", expectedResponseMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0200 I try to GET one student by Id. When I try to get by Id, it should return re" +
            "lated status code: 01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "401")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Invalid ApiKey\'")]
        public void _0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode_01()
        {
#line 15
this._0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode("01", "\'\'", "401", "\'Invalid ApiKey\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0200 I try to GET one student by Id. When I try to get by Id, it should return re" +
            "lated status code: 02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": false}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "401")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Invalid ApiKey\'")]
        public void _0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode_02()
        {
#line 15
this._0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode("02", "\'{\"sendApiKey\": false}\'", "401", "\'Invalid ApiKey\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0200 I try to GET one student by Id. When I try to get by Id, it should return re" +
            "lated status code: 03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": 3}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'{\"id\":3\'")]
        public void _0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode_03()
        {
#line 15
this._0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode("03", "\'{\"sendApiKey\": true, \"value\": 3}\'", "200", "\'{\"id\":3\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0200 I try to GET one student by Id. When I try to get by Id, it should return re" +
            "lated status code: 04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": 4}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'{\"id\":4\'")]
        public void _0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode_04()
        {
#line 15
this._0200ITryToGETOneStudentById_WhenITryToGetByIdItShouldReturnRelatedStatusCode("04", "\'{\"sendApiKey\": true, \"value\": 4}\'", "200", "\'{\"id\":4\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode(string index, string employeeObject, string expectedStatusCode, string expectedResponseMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Index", index);
            argumentsOfScenario.Add("Employee Object", employeeObject);
            argumentsOfScenario.Add("Expected Status Code", expectedStatusCode);
            argumentsOfScenario.Add("Expected Response Message", expectedResponseMessage);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("0300 I try to CREATE student. When I try to create, it should return related stat" +
                    "us code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 27
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 28
 testRunner.Given(string.Format("{0} model", employeeObject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 29
  testRunner.When("I call the create student action", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
  testRunner.Then(string.Format("it should return {0}", expectedStatusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
     testRunner.And(string.Format("raw response message should contain {0}", expectedResponseMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": null}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "415")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Unsupported Media Type\'")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_01()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("01", "\'{\"sendApiKey\": true, \"value\": null}\'", "415", "\'Unsupported Media Type\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":null,\"birthDate\":\"2001-08-09T00:00:" +
            "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'The Name field is required\'")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_02()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("02", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":null,\"birthDate\":\"2001-08-09T00:00:" +
                    "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\'The Name field is required\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Ab\",\"birthDate\":\"2001-08-09T00:00:" +
            "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\"The length of \'Name\' must be at least 3 characters. You entered 2 characters.\"")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_03()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("03", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Ab\",\"birthDate\":\"2001-08-09T00:00:" +
                    "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\"The length of \'Name\' must be at least 3 characters. You entered 2 characters.\"", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'The EmailAddress field is required.\'")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_04()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("04", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\'The EmailAddress field is required.\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"sdfsfsdf\"}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\"\'Email Address\' is not a valid email address.\"")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_05()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("05", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"sdfsfsdf\"}}\'", "400", "\"\'Email Address\' is not a valid email address.\"", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0300 I try to CREATE student. When I try to create, it should return related stat" +
            "us code: 06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "201")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'\"name\":\"Dex Terr\",\"emailAddress\":\"test5@test.com\"\'")]
        public void _0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode_06()
        {
#line 27
this._0300ITryToCREATEStudent_WhenITryToCreateItShouldReturnRelatedStatusCode("06", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'", "201", "\'\"name\":\"Dex Terr\",\"emailAddress\":\"test5@test.com\"\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode(string index, string employeeObject, string expectedStatusCode, string expectedResponseMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Index", index);
            argumentsOfScenario.Add("Employee Object", employeeObject);
            argumentsOfScenario.Add("Expected Status Code", expectedStatusCode);
            argumentsOfScenario.Add("Expected Response Message", expectedResponseMessage);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("0400 I try to UPDATE student. When I try to update, it should return related stat" +
                    "us code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 41
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 42
 testRunner.Given(string.Format("{0} model", employeeObject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 43
  testRunner.When("I call the update student action", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 44
  testRunner.Then(string.Format("it should return {0}", expectedStatusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
     testRunner.And(string.Format("raw response message should contain {0}", expectedResponseMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": null}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "415")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Unsupported Media Type\'")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_01()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("01", "\'{\"sendApiKey\": true, \"value\": null}\'", "415", "\'Unsupported Media Type\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":null,\"birthDate\":\"2001-08-09T00:00:" +
            "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'The Name field is required\'")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_02()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("02", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":null,\"birthDate\":\"2001-08-09T00:00:" +
                    "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\'The Name field is required\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Ab\",\"birthDate\":\"2001-08-09T00:00:" +
            "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\"The length of \'Name\' must be at least 3 characters. You entered 2 characters.\"")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_03()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("03", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Ab\",\"birthDate\":\"2001-08-09T00:00:" +
                    "00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\"The length of \'Name\' must be at least 3 characters. You entered 2 characters.\"", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'The EmailAddress field is required.\'")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_04()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("04", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"image\":null}}\'", "400", "\'The EmailAddress field is required.\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "05")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"sdfsfsdf\"}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "400")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\"\'Email Address\' is not a valid email address.\"")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_05()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("05", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"sdfsfsdf\"}}\'", "400", "\"\'Email Address\' is not a valid email address.\"", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "06")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "404")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Not Found\'")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_06()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("06", "\'{\"sendApiKey\": true, \"value\": {\"id\":0,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'", "404", "\'Not Found\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0400 I try to UPDATE student. When I try to update, it should return related stat" +
            "us code: 07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "07")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": {\"id\":3,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
            "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'\"name\":\"Dex Terr\",\"emailAddress\":\"test5@test.com\"\'")]
        public void _0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode_07()
        {
#line 41
this._0400ITryToUPDATEStudent_WhenITryToUpdateItShouldReturnRelatedStatusCode("07", "\'{\"sendApiKey\": true, \"value\": {\"id\":3,\"name\":\"Dex Terr\",\"birthDate\":\"2001-08-09T" +
                    "00:00:00+03:00\",\"birthPlace\":\"NearSomewhere\",\"emailAddress\":\"test5@test.com\"}}\'", "200", "\'\"name\":\"Dex Terr\",\"emailAddress\":\"test5@test.com\"\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void _0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode(string index, string employeeObject, string expectedStatusCode, string expectedResponseMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Index", index);
            argumentsOfScenario.Add("Employee Object", employeeObject);
            argumentsOfScenario.Add("Expected Status Code", expectedStatusCode);
            argumentsOfScenario.Add("Expected Response Message", expectedResponseMessage);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("0500 I try to DELETE one student by Id. When I try to delete, it should return re" +
                    "lated status code", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 56
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 57
 testRunner.Given(string.Format("{0} model", employeeObject), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 58
  testRunner.When("I call the delete student action", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
  testRunner.Then(string.Format("it should return {0}", expectedStatusCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
     testRunner.And(string.Format("raw response message should contain {0}", expectedResponseMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "* ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0500 I try to DELETE one student by Id. When I try to delete, it should return re" +
            "lated status code: 01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": null}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "405")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'\'")]
        public void _0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode_01()
        {
#line 56
this._0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode("01", "\'{\"sendApiKey\": true, \"value\": null}\'", "405", "\'\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0500 I try to DELETE one student by Id. When I try to delete, it should return re" +
            "lated status code: 02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": -1}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "404")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'Not Found\'")]
        public void _0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode_02()
        {
#line 56
this._0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode("02", "\'{\"sendApiKey\": true, \"value\": -1}\'", "404", "\'Not Found\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0500 I try to DELETE one student by Id. When I try to delete, it should return re" +
            "lated status code: 03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": 3}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'\'")]
        public void _0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode_03()
        {
#line 56
this._0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode("03", "\'{\"sendApiKey\": true, \"value\": 3}\'", "200", "\'\'", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("0500 I try to DELETE one student by Id. When I try to delete, it should return re" +
            "lated status code: 04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("StudentsController")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Index", "04")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Employee Object", "\'{\"sendApiKey\": true, \"value\": 4}\'")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Status Code", "200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Expected Response Message", "\'\'")]
        public void _0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode_04()
        {
#line 56
this._0500ITryToDELETEOneStudentById_WhenITryToDeleteItShouldReturnRelatedStatusCode("04", "\'{\"sendApiKey\": true, \"value\": 4}\'", "200", "\'\'", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
